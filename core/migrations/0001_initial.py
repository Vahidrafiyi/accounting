# Generated by Django 3.2 on 2023-11-10 19:36

import core.managers
import core.models
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted?')),
                ('phone', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='phone')),
                ('address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='address')),
                ('image', models.ImageField(null=True, upload_to=core.models.user_image_directory, verbose_name='image')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', core.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted?')),
                ('account_title', models.CharField(max_length=200, verbose_name='account title')),
                ('bank_name', models.CharField(max_length=200, verbose_name='bank name')),
                ('account_number', models.TextField(blank=True, max_length=50, verbose_name='account number')),
                ('card_number', models.TextField(blank=True, max_length=50, verbose_name='card number')),
                ('shaba_number', models.TextField(blank=True, max_length=50, verbose_name='shaba number')),
                ('mojoudi', models.IntegerField(default=0, verbose_name='mojoudi')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='description')),
                ('received_money', models.FloatField(blank=True, default=0, null=True, verbose_name='received money')),
                ('paid_money', models.FloatField(blank=True, default=0, null=True, verbose_name='paid money')),
                ('balance', models.FloatField(blank=True, default=0, null=True, verbose_name='balance')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'ordering': ['-account_title'],
            },
        ),
    ]
